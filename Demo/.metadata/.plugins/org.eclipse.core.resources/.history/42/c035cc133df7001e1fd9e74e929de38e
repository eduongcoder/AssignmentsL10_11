import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.*;
import java.util.Properties;
public class main {

	public static void createDataGroup(Connection connection,String groupName,short authorId) throws SQLException {
		String sql = "insert into `group` (`name`,author_ID )" +
					  "values 			(  ?   ,	?	  )";
		PreparedStatement preparedStatement = connection.prepareStatement(sql);
		// input scanner

		// set parameter
		preparedStatement.setString(1, groupName);
		preparedStatement.setShort(2, authorId);

		int effectedRecordAmount = preparedStatement.executeUpdate();

		System.out.println("Effect Record Amount: " + effectedRecordAmount);

	}
	public static void createDataUser(Connection connection,Short group_id,short user_id) throws SQLException {
		String sql = "insert into `user_group` (`group_id`,`user_id` )" +
					  "values 			(  ?   ,	?	  )";
		PreparedStatement preparedStatement = connection.prepareStatement(sql);
		// input scanner

		// set parameter
		preparedStatement.setString(1, groupName);
		preparedStatement.setShort(2, authorId);

		int effectedRecordAmount = preparedStatement.executeUpdate();

		System.out.println("Effect Record Amount: " + effectedRecordAmount);

	}
	public static void updateDataGroup(Connection connection,String groupName,short authorId) throws SQLException {
		String sql="Update `group` "+
					"Set `name` = ?"+
					"Where `id` =?";
		PreparedStatement preparedStatement = connection.prepareStatement(sql);
		
		preparedStatement.setString(1, groupName);
		preparedStatement.setShort(2, authorId);

		int effectedRecordAmount = preparedStatement.executeUpdate();

		System.out.println("Effect Record Amount: " + effectedRecordAmount);

	}				

	public static Connection getConnection()
			throws SQLException, ClassNotFoundException, FileNotFoundException, IOException {
		Properties properties = new Properties();
		properties.load(new FileInputStream("src/main/resources/database.properties"));
		String url = properties.getProperty("url");
		String username = properties.getProperty("username");
		String password = properties.getProperty("password");
		// register the driver class with DriverManager
		Class.forName("com.mysql.cj.jdbc.Driver");
		// Step 2: get a Database Connection
		return DriverManager.getConnection(url, username, password);
	}
	public static void main(String[] args) throws SQLException,ClassNotFoundException ,FileNotFoundException,IOException
	{

		Connection connection =getConnection();
		System.out.println("Connect success!");
		// Step 3: Create a statement obiect
		updateDataGroup(connection, "Java senior2",(short) 1);
		// Step 4: Execute SQL query

		//String sql1 = "SELECT	name,author_ID "
		//			+ "FROM		`group`";
		//ResultSet resultSet = statement.executeQuery(sql1);
		
		
		// Step 5: Handling Result Set
//		while (resultSet.next()) { 
//			System.out.println(resultSet.getInt("id")); 
//			System.out.println(resultSet.getString("username")); 
//			System.out.println(resultSet.getString("email"));
//		}
		//Step 6: Close connection
		connection.close();
	}		
	private static void createUser(Connection connection) throws SQLException {
		// Step 3: Create a statement object
		String sql = "INSERT INTO `User` 	(`username`	,	`email`	,	`password`	,`firstName`,	`lastName`	,	`gender`	,`date_Of_Birth` , `address`, `phone` 	, `role`, `status`	)"
				+ "VALUE				(	?	   	,	?  		, 		?		,	?		,		?		,		?		,		?		 ,		?	,	?		,	?	,	?		)";
		PreparedStatement preparedStatement = connection.prepareStatement(sql);

		// input from scanner
		String username = "xuanmaivti", email = "hungnguyen@gmail.com", password = "123456", firstName = "Phạm",
				lastName = "Quang Hưng", gender = "M", dateOfBirth = "1999-02-02", address = "Hà Nội",
				phone = "03922225474", role = "EMPLOYEE";
		int status = 0;

		// set parameter
		preparedStatement.setString(1, username);
		preparedStatement.setString(2, email);
		preparedStatement.setString(3, password);
		preparedStatement.setString(4, firstName);
		preparedStatement.setString(5, lastName);
		preparedStatement.setString(6, gender);
		preparedStatement.setString(7, dateOfBirth);
		preparedStatement.setString(8, address);
		preparedStatement.setString(9, phone);
		preparedStatement.setString(10, role);
		preparedStatement.setInt(11, status);

		// Step 4: Execute SQL query
		int effectedRecordAmount = preparedStatement.executeUpdate();

		// Step 5: Handling Result Set
		System.out.println("Effected Record Amount (Create User): " + effectedRecordAmount);
	}
}
